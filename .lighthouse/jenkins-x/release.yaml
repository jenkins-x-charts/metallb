apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/helm/release.yaml@versionStream
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: next-version
          resources: {}
        - name: jx-variables
          resources: {}
        - image: gcr.io/jenkinsxio/jx:2.1.150
          name: promote-changelog
          resources: {}
          script: |
            #!/bin/bash
            source /workspace/source/.jx/variables.sh

            if [ -d "/workspace/source/charts/$REPO_NAME" ]; then
            sed -i -e "s/version:.*/version: $VERSION/" ./charts/*/Chart.yaml
            sed -i -e "s/repository:.*/repository: $DOCKER_REGISTRY\/$DOCKER_REGISTRY_ORG\/$APP_NAME/" ./charts/$REPO_NAME/values.yaml
            sed -i -e "s/tag:.*/tag: $VERSION/" ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi

            git commit -a -m "release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Release version $VERSION"
            git push origin v$VERSION

            jx step changelog --version v${VERSION}
        - name: promote-helm-release
          resources: {}
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 240h0m0s
status: {}
